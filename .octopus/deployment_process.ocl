step "production-approval" {
    name = "Production approval"

    action {
        action_type = "Octopus.Manual"
        environments = ["production"]
        properties = {
            Octopus.Action.Manual.BlockConcurrentDeployments = "False"
            Octopus.Action.Manual.Instructions = "Does this change have all tasks approved? Check the change request."
            Octopus.Action.Manual.ResponsibleTeamIds = "global/everyone"
        }
    }
}

step "create-load-balancer" {
    name = "Create Load balancer"
    properties = {
        Octopus.Action.TargetRoles = "aspire"
    }

    action {
        action_type = "Octopus.KubernetesDeployRawYaml"
        properties = {
            Octopus.Action.Kubernetes.DeploymentTimeout = "180"
            Octopus.Action.Kubernetes.ResourceStatusCheck = "True"
            Octopus.Action.Kubernetes.ServerSideApply.Enabled = "False"
            Octopus.Action.Kubernetes.ServerSideApply.ForceConflicts = "False"
            Octopus.Action.KubernetesContainers.CustomResourceYaml = <<-EOT
                apiVersion: v1
                kind: Service
                metadata:
                  name: 'webfrontend'
                  namespace: 'default'
                spec:
                  type: LoadBalancer
                  ports:
                    - name: http
                      port: 8080
                      targetPort: 8080
                      protocol: TCP
                  selector:
                    component: web
                    type: main
                
                EOT
            Octopus.Action.Script.ScriptSource = "Inline"
            OctopusUseBundledTooling = "False"
        }
        worker_pool = "hosted-windows"

        container {
            feed = "dockerhub"
            image = "octopusdeploy/worker-tools:6.2.1-ubuntu.22.04"
        }
    }
}

step "deploy-asire-sample-aspir8-kustomize-output" {
    name = "Deploy Aspire Sample Aspir8 Kustomize output"
    properties = {
        Octopus.Action.TargetRoles = "aspire"
    }

    action {
        action_type = "Octopus.Kubernetes.Kustomize"
        properties = {
            Octopus.Action.GitRepository.Source = "Project"
            Octopus.Action.Kubernetes.DeploymentTimeout = "180"
            Octopus.Action.Kubernetes.Kustomize.OverlayPath = "aspire-sample.AppHost/aspirate-output/"
            Octopus.Action.Kubernetes.ResourceStatusCheck = "True"
            Octopus.Action.Kubernetes.ServerSideApply.Enabled = "False"
            Octopus.Action.Kubernetes.ServerSideApply.ForceConflicts = "False"
            Octopus.Action.Script.ScriptSource = "GitRepository"
            OctopusUseBundledTooling = "False"
        }
        worker_pool = "hosted-ubuntu"

        container {
            feed = "dockerhub"
            image = "octopusdeploy/worker-tools:6.2.1-ubuntu.22.04"
        }
    }
}